#############################################################################################################################
# @File   tl_secure_boot_post_tool_cfg.ini
# @Brief  This configuration file is used to generate the operation description file related to the B92 chip.
# @Note   * Please use '#' to add comments.
#         * Only keys with modifiable descriptions can be modified. Please modify with caution.
#############################################################################################################################


#############################################################################################################################
# @Name   Post_Data
# @Brief  This section is used to specify the data composition of the run descriptor and some custom information.
#         data_list - This key used to specify the data composition of the generated file, with values consisting of the names
#                     of the 'data sections' separated by commas in English. [[[NOTE]]]!!!!!!Please do not modify it!!!!!!
#         private_key - This key is used to set the private key value. The value must be entered in hexadecimal format and has
#                       a length of 32 bytes. If the value is not set or set incorrectly, a new value will be randomly generated
#                       and saved.
#         public_key_hash_name - This key is used to set the output file name, which is used to store the public key hash value.
#                                It should be noted that the file name must end with '. bin'. If this value is not set, it defaults
#                                to 'public_key_hash. bin'
#############################################################################################################################
[Post_Data]
data_list = TLNK_Mark,Public_Key,Signature,Run_Code_Address,Run_Code_Size,Watchdog_Target_Value
private_key = d0548e06ced83d625b9f1d068fb6a54754da7a24cc4027249021467e7cfe960f    # Can be modified # Please keep the private key carefully


#############################################################################################################################
# Data Section Begin: the following sections are all 'data section' which used to describe a piece of data.
#
# @Brief  All the 'data section' have the same structure, the details are as follows:
#         value - This key is used to set specific data content, and its value must consist of the key names in the sub
#                 section 'EnumerateList'.
#         value_byte_size - This key is used to specify the length of valid data.
#         extend_byte_size - This key is used to specify the total length of data.
#         fill_value - This key is used to set the padding value for non valid data, which must be entered in hexadecimal format.
#         Enumerate_List - This section is used to configure the values that can be set for the "value" key. It should be noted
#                          that all key values must be entered in hexadecimal format in bytes and separated by English commas.
#                          In addition, special fields can also be used to fill in key values, as follows:
#                          [public_key] - The public key data calculated from the private key.
#                          [signature] - The generated signature data.
#                          [file_size] - The size of the input binary file.
#############################################################################################################################


#############################################################################################################################
# @Name   Run_Code_Address
# @Brief  This section is 'data section' used to set the startup address for running code.
# @Note   It should be noted that the value should be consistent with the value of 'MSPI_Multiboot_Set'.If this is set to
#         'run_code_address_0K', then 'MSPI_Multiboot_Set' must be set to 'mspi_multiboot_set_0K', and so on.
#############################################################################################################################
[Run_Code_Address]
value = run_code_address_0K    # Can be modified
value_byte_size = 4
extend_byte_size = 4
fill_value = 0xff
[[Enumerate_List]]
run_code_address_0K   = 0x00,0x00,0x00,0x00
run_code_address_64K  = 0x00,0x00,0x01,0x00
run_code_address_128K = 0x00,0x00,0x02,0x00
run_code_address_256K = 0x00,0x00,0x04,0x00
run_code_address_512K = 0x00,0x00,0x08,0x00
run_code_address_1M   = 0x00,0x00,0x10,0x00
run_code_address_2M   = 0x00,0x00,0x20,0x00
run_code_address_4M   = 0x00,0x00,0x40,0x00
run_code_address_8M   = 0x00,0x00,0x80,0x00

#############################################################################################################################
# @Name   TLNK_Mark
# @Brief  This section is 'data section' used to store running flags.
# @Note   !!!!!!Please do not modify it!!!!!!
#############################################################################################################################
[TLNK_Mark]
value = tlnk_mark
value_byte_size = 4
extend_byte_size = 4
fill_value = 0xff
[[Enumerate_List]]
tlnk_mark = 0x4b,0x4e,0x4c,0x54


#############################################################################################################################
# @Name   Public_Key
# @Brief  This section is 'data section' used to set the data of public key.
# @Note   !!!!!!Please do not modify it!!!!!!
#############################################################################################################################
[Public_Key]
value = public_key
value_byte_size = 64
extend_byte_size = 64
fill_value = 0xff
[[Enumerate_List]]
public_key = [public_key]


#############################################################################################################################
# @Name   Signature
# @Brief  This section is 'data section' used to set the data of the signature of the input binary file.
# @Note   !!!!!!Please do not modify it!!!!!!
#############################################################################################################################
[Signature]
value = signature
value_byte_size = 64
extend_byte_size = 64
fill_value = 0xff
[[Enumerate_List]]
signature = [signature]


#############################################################################################################################
# @Name   Code_Size
# @Brief  This section is 'data section' used to set the size of the binary file, which is the size of the running code.
# @Note   !!!!!!Please do not modify it!!!!!!
#############################################################################################################################
[Run_Code_Size]
value = run_code_size_byte
value_byte_size = 4
extend_byte_size = 4
fill_value = 0xff
[[Enumerate_List]]
run_code_size_byte = [file_size]


#############################################################################################################################
# @Name   Watchdog_Target_Value
# @Brief  This section is 'data section' used to set the capture value of the watchdog.
# @Note   !!!!!!Please do not modify it!!!!!!
#############################################################################################################################
[Watchdog_Target_Value]
value = watchdog_target_value_default
value_byte_size = 4
extend_byte_size = 4
fill_value = 0xff
[[Enumerate_List]]
watchdog_target_value_default = 0xff,0xff,0xff,0xff


#############################################################################################################################
# Data Section End: the following sections are not 'data section'.
#############################################################################################################################


#############################################################################################################################
# @Name   Offset_Record
# @Brief  This section is used to configure the 'data section' that needs to be recorded with offset addresses.
#         record_list - This key is used to set the 'data section' that the offset address needs to be recorded.The value consists
#                       of the name of the 'data section' and is separated by commas in English. It should be noted that the
#                       name of the 'data section' must be in 'PostData ->data_list'
#         record_list_max_size - This key is used to set the maximum number of 'data section' that can be recorded as offset
#                                addresses.
#         record_unit_byte_size - This key is used to set the data length for saving offset addresses, which should not exceed
#                                 4 bytes at most.
#         record_unit_big_endian - This key is used to specify whether the data used to store offset addresses is stored in
#                                  large end or small end mode. If the value is "True", the large end mode is used, and if not,
#                                  the small end mode will be used.
# @Note   !!!!!!Please do not modify it!!!!!!
#############################################################################################################################
[Offset_Record]
record_list = Public_Key,Signature
record_list_max_size = 16
record_unit_byte_size = 2
record_unit_big_endian = False
